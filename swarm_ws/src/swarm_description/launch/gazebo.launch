<launch>

  <!-- launching drive controller -->
  <include file="$(find swarm_description)/launch/display_robot.launch"/>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find swarm_description)/urdf/blackhawk_standalone.xacro"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <rosparam file="$(find swarm_description)/config/swarm_bot_control.yaml" command="load"/>
  <!-- Creating a controller for the robot -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/swarm_bot" args="left_wheel_velocity_controller right_wheel_velocity_controller joint_state_controller"/>
  <!-- <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/swarm_bot" args="joint_state_controller swarm_base_controller"/> -->

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-z 0.0 -unpause -urdf -model robot -param robot_description" respawn="false" output="screen" />

  <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/> -->

  <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
    <remap from="/joint_states" to="/swarm_bot/joint_states"/>
  </node>

</launch>
